{"mappings":"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","sources":["src/my-library.js","src/js/paginationIn-library.js"],"sourcesContent":["import onClickPlayer from './js/trailerplayer';\nimport apiService from './js/apiService';\nimport {mask} from './js/loader';\nimport * as teamModal from './js/team-members';\nimport toggleModal from './js/modal';\nimport { paginationLocalStorage } from './js/paginationIn-library';\nimport localstorage from './js/service/localstorage';\nimport renderFilms from './js/renderFilms';\nimport theme from './js/theme';\nimport searchByName from './js/searchByName';\nimport languageApi from './js/language-changer';\n\npaginationLocalStorage('watched');\nconst filmContainer = document.querySelector('.my-gallery');\n//  Вішаємо слухача і при click, запускаємо Відео\nfilmContainer.addEventListener('click', onClickPlayer);\n\nconst buttons = document.querySelector('.header__buttons-library');\nconst btnQueue = document.querySelector('[data-add=\"queue\"]');\nconst btnWatched = document.querySelector('[data-add=\"watched\"]');\n\nbuttons.addEventListener('click', onClickBtnLibrary);\n\nfunction onClickBtnLibrary(e) {\n    const target = e.target;\n    if (target === btnQueue) {\n        if (!localstorage.load('queue')) {\n            onClassActiveToggle(target);\n            return;\n        } else {\n            paginationLocalStorage('queue');\n            onClassActiveToggle(target);\n            return;\n        };\n    };\n\n    if (target === btnWatched) {\n        if (!localstorage.load('watched')) {\n            onClassActiveToggle(target);\n            return;\n        } else {\n            paginationLocalStorage('watched');\n            onClassActiveToggle(target);\n            return;\n        };\n    };\n};\n\nfunction onClassActiveToggle(target) {\n    if (target === btnQueue) {\n        btnWatched.classList.remove('btn--active');\n        btnQueue.classList.add('btn--active');\n    } else {\n        btnWatched.classList.add('btn--active');\n        btnQueue.classList.remove('btn--active');\n    };\n};\n\n","import * as paginationFunctions from './pagination-functions';\nimport renderFilms from './renderFilms';\nimport showPlayBtnAfterImgLoad from './service/play-btn-delay'\n\nconst NUMBER_PAGINATION = 5;\nconst NUMBER_PER_PAGE = 3;\nconst cardContainerEl = document.querySelector('.gallery');\nconst paginationEl = document.querySelector('.pagination__box');\nconst paginationContainerEl = document.querySelector('.pagination__container');\n\n\n\nexport function paginationLocalStorage(placeKey) {\n\n    const savedFilms = localStorage.getItem(`${placeKey}`) || []; // дістаємо зі сховища рядок фільмів за відповідним ключем\n\n    try {\n        const parsedSavedFilms = JSON.parse(savedFilms); // робимо парс отриманого рядка в масив\n        const filmsNumber = parsedSavedFilms.length; // отримуємо кількість усіх фільмів, що є в сховищі\n    \n    if (filmsNumber === 0) {                 //якщо фільмів немає то очищуємо контейнер для фільмів (можливо перед цим в контейнері відображались з попередньої вкладки) і виходмо\n        cardContainerEl.innerHTML = '';\n        paginationFunctions.clearPagination(paginationEl);\n        return;\n    }\n        \n          if (placeKey === 'watched') {\n                document.querySelector('button[data-add=\"queque\"]')?.addEventListener('click', () => {\n                    paginationEl.removeEventListener('click', onDigitPaginationClick);\n                    paginationContainerEl.removeEventListener('click', onArrowPaginationClick);\n            }\n            )\n        }\n\n        if (placeKey === 'queue') {\n            document.querySelector('button[data-add=\"watched\"]')?.addEventListener('click', () => {\n                 paginationContainerEl.removeEventListener('click', onArrowPaginationClick);\n                 paginationEl.removeEventListener('click', onDigitPaginationClick);\n            }      \n            )\n        }\n\n    const total_pages = Math.ceil(filmsNumber / NUMBER_PER_PAGE); // кількість сторінок \n    const films = filmsList(parsedSavedFilms, NUMBER_PER_PAGE, 1); // ріжемо необхідну кількість фільмів для ст 1 \n        \n    appendFromLocalStorage(films); // рендер отриманої частинки фільмів\n  \n    if (total_pages <= NUMBER_PAGINATION + 2 && total_pages >= 1) { // пагінація без стрілок, якщо кількість сторінок <= 7\n        \n        paginationFunctions.clearPagination(paginationEl); // очищуємо вміст попередньої пагінації\n\n        paginationFunctions.displayPaginationSmall(total_pages, paginationEl); // рендер пагінації без стрілок \n        document.querySelector('.js-page-1').classList.add('pagination__item--select'); // першу сторінку робимо активною\n\n        paginationEl.addEventListener('click', onDigitPaginationClick);\n\n         if (total_pages === 1) {\n                paginationFunctions.clearPagination(paginationEl);\n         }\n        \n        function onDigitPaginationClick(e) { // делегування на контейнер \n            e.preventDefault();\n\n            if (!e.target.classList.contains('pagination__item')) { // якщо вибрали не li (сторінку) не реагуємо\n                return;\n            }\n\n            const currentPage = Number(e.target.textContent);  // номер клікнутої сторінки \n\n            //document.querySelector('.pagination__item--select')?.classList.remove('pagination__item--select');\n            //document.querySelector(`.js-page-${currentPage}`)?.classList.add('pagination__item--select');\n            \n            paginationFunctions.clearPagination(paginationEl);  // очищуємо попередню пагінацію\n\n            onBigPaginationBtnClickrRenderFilms(currentPage, parsedSavedFilms);  // рендер необхідної частини фільму залежно від вибраної сторінки\n            paginationFunctions.displayPaginationSmall(total_pages, paginationEl); // рендер пагінації без стрілок\n            document.querySelector(`.js-page-${currentPage}`)?.classList.add('pagination__item--select'); // клікнуту сторінку робимо активною\n        }\n\n        if (placeKey === 'watched') {\n            document.querySelector('button[data-add=\"queue\"]')?.addEventListener('click', () =>\n            {\n                paginationContainerEl.removeEventListener('click', onArrowPaginationClick);\n                paginationEl.removeEventListener('click', onDigitPaginationClick);\n                }\n            )\n        }\n\n         if (placeKey === 'queue') {\n             document.querySelector('button[data-add=\"watched\"]')?.addEventListener('click', () => {\n                paginationContainerEl.removeEventListener('click', onArrowPaginationClick);\n                paginationEl.removeEventListener('click', onDigitPaginationClick);\n            }\n                \n            )\n        }\n        \n        return;\n    }\n\n        // якщо кількість сторінок >7 (пагінація зі стрілками)\n\n    paginationFunctions.clearPagination(paginationEl); // очищуємо поточну пагінацію\n    paginationFunctions.displayPaginationBig(total_pages, paginationContainerEl, paginationEl); // рендер пагінації зі стрілками\n    document.querySelector('.js-page-1').classList.add('pagination__item--select'); // перша сторінка активна\n\n    const btnLeft = document.querySelector('.pagination__btnLeft'); // ліва стрілка\n    const btnRight = document.querySelector('.pagination__btnRight'); // права стрілка\n\n    btnLeft.disabled = true; // ліва стрілка неактивна бо ст 1\n\n        paginationContainerEl.addEventListener('click', onArrowPaginationClick);\n\n        function onArrowPaginationClick (e)  { // слухаємо контейнер, в якому стрілки (кнопки) і числова пагінація (список)\n        e.preventDefault();\n\n        if (!e.target.classList.contains('pagination__item') && !e.target.classList.contains('pagination__btnLeft') && !e.target.classList.contains('pagination__btnRight') ) {\n            return;   // якщо клік не по стрілках і не по цифрах не реагуємо\n        };\n        \n        if (e.target.classList.contains('pagination__item')) { // якщо клікнули по цифрах\n            const currentPage = Number(e.target.textContent);       // номер клікнутої сторінки \n        \n            onBigPaginationBtnClickrRenderFilms(currentPage, parsedSavedFilms); // рендер відповідної частини фільмів\n            onBigPaginationBtnClickrRenderPagination(total_pages, currentPage); // рендер пагінації (залежно від клікнутої сторінки буде одна з трьох пагінацій)\n\n            paginationFunctions.activityArrows(currentPage, total_pages);  // робимо стрілки неактивними якщо клікнули на першу чи останню сторінки\n        }\n\n        if (e.target.classList.contains('pagination__btnLeft')) { // якщо клікнули по лівій стрілці\n                \n                const activePage = document.querySelector('.pagination__item--select'); \n                const activePageNumber = Number(activePage.textContent); // номер сторінки яка була активною на момент кліку\n                const previousPage = activePageNumber - 1; // визначаємо номер сторінки яку потрібно рендерити (перша злііва від активної)\n\n                onBigPaginationBtnClickrRenderFilms(previousPage, parsedSavedFilms); // рендер фільмів\n                onBigPaginationBtnClickrRenderPagination(total_pages, previousPage); // рендер пагінації\n\n                paginationFunctions.activityOfLeftArrow(1); // якщо рендерили по 1 ст то стрілка ліва стає неактивною\n            }\n\n        if (e.target.classList.contains('pagination__btnRight')) {\n\n                const activePage = document.querySelector('.pagination__item--select');\n                const activePageNumber = Number(activePage.textContent);\n                const nextPage = activePageNumber + 1;\n\n                onBigPaginationBtnClickrRenderFilms(nextPage, parsedSavedFilms);\n                onBigPaginationBtnClickrRenderPagination(total_pages, nextPage); \n                \n                paginationFunctions.activityOfRightArrow(total_pages);  // якщо рендерили по останній сторінці, то права стрілка стає неактивною\n        }\n            \n            if (placeKey === 'watched') {\n                document.querySelector('button[data-add=\"queque\"]')?.addEventListener('click', () => {\n                    paginationEl.removeEventListener('click', onDigitPaginationClick);\n                    paginationContainerEl.removeEventListener('click', onArrowPaginationClick);\n            }\n            )\n        }\n\n         if (placeKey === 'queue') {\n            document.querySelector('button[data-add=\"watched\"]')?.addEventListener('click', () => {\n                 paginationContainerEl.removeEventListener('click', onArrowPaginationClick);\n                 paginationEl.removeEventListener('click', onDigitPaginationClick);\n            }      \n            )\n        }\n    }\n    } catch {\n        console.log('nothing are parsed');\n    }\n}\n\nfunction filmsList(arrFilms, numberPerPage, page) { //нарізка фільмів по сторінках\n        cardContainerEl.innerHTML = '';\n        page -= 1; // рендеримо з 0\n\n        const start = numberPerPage * page;\n        const end = start + numberPerPage;\n        const paginatedData = arrFilms.slice(start, end);\n\n        return paginatedData;  // наприклад 2 сторінка з 8 фільмами: початок шматка фільмів - 8*1=8 і кінець - 8+8=16 (не включно, бо slice)\n    }\n\n\nfunction onBigPaginationBtnClickrRenderFilms(currentPage, parsedSavedFilms) { // рендер фільмів\n    cardContainerEl.innerHTML = '';\n    \n    const films = filmsList(parsedSavedFilms, NUMBER_PER_PAGE, currentPage); // вирізана частина\n        \n    appendFromLocalStorage(films); // рендер частини фільмів\n}\n\nfunction onBigPaginationBtnClickrRenderPagination(total_pages, currentPage) { //рендер пагінації залежно від клікнутої сторінки: три варіанти\n    paginationFunctions.clearPagination(paginationEl);\n\n    const n = NUMBER_PAGINATION - (Math.ceil(NUMBER_PAGINATION / 3) - 2); // 5\n    const m = total_pages - (NUMBER_PAGINATION - 1); // 5 з кінця\n\n\n    if (currentPage < n) {\n        paginationFunctions.displayPaginationBig(total_pages, paginationContainerEl, paginationEl); //пагінація з крапками біля останньої сторінки\n    } else if (currentPage >= n && currentPage <= m) {\n        paginationFunctions.displayPaginationBigMiddle(total_pages, currentPage, paginationContainerEl, paginationEl); //пагінація з середньою частиною\n    } else {\n        paginationFunctions.displayPaginationBigFinish(total_pages, paginationContainerEl, paginationEl); //пагінація з крапками біля 1 сторінки\n    }\n\n    document.querySelector(`.js-page-${currentPage}`)?.classList.add('pagination__item--select'); // поточну сторінку робимо активною\n}\n\nasync function appendFromLocalStorage(parsedFilms) { // рендер фільмів в контейнер\n    try {\n        const markup = await renderFilms(parsedFilms).then(result => result); // рядок для рендеру\n        cardContainerEl.innerHTML = markup; \n        showPlayBtnAfterImgLoad(); // Кнопка PLAY з'являється після картинки\n    } catch (error) {\n        console.error(error);\n    };\n};"],"names":["$76WF6","parcelRequire","$1fh5F","$2c891b7cf97d6499$var$cardContainerEl","document","querySelector","$2c891b7cf97d6499$var$paginationEl","$2c891b7cf97d6499$var$paginationContainerEl","$2c891b7cf97d6499$export$34c0a7faebb0d629","placeKey","savedFilms","localStorage","getItem","parsedSavedFilms","JSON","parse","filmsNumber","length","innerHTML","clearPagination","addEventListener","removeEventListener","onDigitPaginationClick","onArrowPaginationClick","total_pages","Math","ceil","$2c891b7cf97d6499$var$appendFromLocalStorage","$2c891b7cf97d6499$var$filmsList","$2c891b7cf97d6499$var$NUMBER_PAGINATION","e","preventDefault","target","classList","contains","currentPage","Number","textContent","$2c891b7cf97d6499$var$onBigPaginationBtnClickrRenderFilms","displayPaginationSmall","add","displayPaginationBig","btnLeft","$2c891b7cf97d6499$var$onBigPaginationBtnClickrRenderPagination","activityArrows","activePage","previousPage","activityOfLeftArrow","nextPage","activityOfRightArrow","disabled","console","log","arrFilms","numberPerPage","page","start","end","slice","n","m","displayPaginationBigMiddle","displayPaginationBigFinish","async","parsedFilms","markup","$c9UGP","default","then","result","$3bDCL","error","$fc8e7c71b3b7ed96$var$buttons","$fc8e7c71b3b7ed96$var$btnQueue","$fc8e7c71b3b7ed96$var$btnWatched","$fc8e7c71b3b7ed96$var$onClassActiveToggle","remove","$ccqIN","load"],"version":3,"file":"my-library.d912db59.js.map"}