{"mappings":"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","sources":["src/my-library.js","src/js/paginationIn-library.js"],"sourcesContent":["import onClickPlayer from './js/trailerplayer';\nimport apiService from './js/apiService';\nimport {mask} from './js/loader';\nimport * as teamModal from './js/team-members';\nimport toggleModal from './js/modal';\nimport { paginationLocalStorage } from './js/paginationIn-library';\nimport localstorage from './js/service/localstorage';\nimport renderFilms from './js/renderFilms';\nimport theme from './js/theme';\nimport searchByName from './js/searchByName';\nimport languageApi from './js/language-changer';\nimport {onGalleryReview, showBlankPage} from './js/service/blank-page'\n\npaginationLocalStorage('watched');\nonGalleryReview('watched');\nconst filmContainer = document.querySelector('.libary-gallery');\n//  Вішаємо слухача і при click, запускаємо Відео\nfilmContainer.addEventListener('click', onClickPlayer);\n// filmContainer.addEventListener('touchstart', onClickPlayer);\n\nconst buttons = document.querySelector('.header__buttons-library');\nconst btnQueue = document.querySelector('[data-add=\"queue\"]');\nconst btnWatched = document.querySelector('[data-add=\"watched\"]');\n\nbuttons.addEventListener('click', onClickBtnLibrary);\n\nfunction onClickBtnLibrary(e) {\n    const target = e.target;\n    onGalleryReview(target.dataset.add);\n    \n    if (target === btnQueue) {\n        if (!localstorage.load('queue')) {\n            onClassActiveToggle(target);\n            filmContainer.innerHTML='';\n            return;\n        } else {\n            paginationLocalStorage('queue');\n            onClassActiveToggle(target);\n            return;\n        };\n    };\n\n    if (target === btnWatched) {\n        if (!localstorage.load('watched')) {\n            onClassActiveToggle(target);\n            filmContainer.innerHTML='';\n            return;\n        } else {\n            paginationLocalStorage('watched');\n            onClassActiveToggle(target);\n            return;\n        };\n    };\n\n};\n\nfunction onClassActiveToggle(target) {\n    if (target === btnQueue) {\n        btnWatched.classList.remove('btn--active');\n        btnQueue.classList.add('btn--active');\n    } else {\n        btnWatched.classList.add('btn--active');\n        btnQueue.classList.remove('btn--active');\n    };\n};\n\n","import * as paginationFunctions from './pagination-functions';\nimport renderFilms from './renderFilms';\nimport showPlayBtnAfterImgLoad from './service/play-btn-delay';\nimport {onGalleryReview, showBlankPage} from './service/blank-page';\n\nconst NUMBER_PAGINATION = 5;\nconst NUMBER_PER_PAGE = 20;\nconst cardContainerEl = document.querySelector('.gallery');\nconst paginationEl = document.querySelector('.pagination__box');\nconst paginationContainerEl = document.querySelector('.pagination__container');\n\n\n\nexport function paginationLocalStorage(placeKey) {\n\n    if (placeKey === 'watched') {\n        document.querySelector('button[data-add=\"queque\"]')?.addEventListener('click', onRemoveListeners);\n    }\n\n        // add gor queueSearch and watchedSearch\n\n    if (placeKey === 'queue') {\n        document.querySelector('button[data-add=\"watched\"]')?.addEventListener('click', onRemoveListeners);\n    }\n\n\n    function onRemoveListeners () {\n            paginationEl.removeEventListener('click', onDigitPaginationClick);\n            paginationContainerEl.removeEventListener('click', onArrowPaginationClick);\n        }\n\n    const savedFilms = localStorage.getItem(`${placeKey}`) || []; // дістаємо зі сховища рядок фільмів за відповідним ключем\n\n    \n    try {\n        const parsedSavedFilms = JSON.parse(savedFilms); // робимо парс отриманого рядка в масив\n        const filmsNumber = parsedSavedFilms.length; // отримуємо кількість усіх фільмів, що є в сховищі\n   \n    if (filmsNumber === 0) {                 //якщо фільмів немає то очищуємо контейнер для фільмів (можливо перед цим в контейнері відображались з попередньої вкладки) і виходмо\n        cardContainerEl.innerHTML = '';\n        paginationFunctions.clearPagination(paginationEl);\n        // якщо немає фільмів показати пусту сторінку\n        showBlankPage(filmsNumber);\n        // \n        return;\n    }\n        \n\n    const totalPages = Math.ceil(filmsNumber / NUMBER_PER_PAGE); // кількість сторінок \n    const films = filmsList(parsedSavedFilms, NUMBER_PER_PAGE, 1); // ріжемо необхідну кількість фільмів для ст 1 \n        \n    appendFromLocalStorage(films); // рендер отриманої частинки фільмів\n  \n    if (totalPages <= NUMBER_PAGINATION + 2 && totalPages >= 1) { // пагінація без стрілок, якщо кількість сторінок <= 7\n        \n        if (placeKey === 'watched') {\n            document.querySelector('button[data-add=\"queque\"]')?.addEventListener('click', onRemoveListeners);\n        }\n\n            // add gor queueSearch and watchedSearch\n\n        if (placeKey === 'queue') {\n            document.querySelector('button[data-add=\"watched\"]')?.addEventListener('click', onRemoveListeners);\n        }\n\n        \n        \n        paginationFunctions.clearPagination(paginationEl); // очищуємо вміст попередньої пагінації\n\n        paginationFunctions.displayPaginationSmall(totalPages, paginationEl); // рендер пагінації без стрілок \n        document.querySelector('.js-page-1').classList.add('pagination__item--select'); // першу сторінку робимо активною\n\n        paginationEl.addEventListener('click', onDigitPaginationClick);\n\n         if (totalPages === 1) {\n                paginationFunctions.clearPagination(paginationEl);\n         }\n        \n        return;\n    }\n        \n    function onDigitPaginationClick(e) { // делегування на контейнер \n            e.preventDefault();\n\n            if (!e.target.classList.contains('pagination__item')) { // якщо вибрали не li (сторінку) не реагуємо\n                return;\n            }\n\n            const currentPage = Number(e.target.textContent);  // номер клікнутої сторінки \n\n            //document.querySelector('.pagination__item--select')?.classList.remove('pagination__item--select');\n            //document.querySelector(`.js-page-${currentPage}`)?.classList.add('pagination__item--select');\n            \n            paginationFunctions.clearPagination(paginationEl);  // очищуємо попередню пагінацію\n\n            onBigPaginationBtnClickrRenderFilms(currentPage, parsedSavedFilms);  // рендер необхідної частини фільму залежно від вибраної сторінки\n            paginationFunctions.displayPaginationSmall(totalPages, paginationEl); // рендер пагінації без стрілок\n            document.querySelector(`.js-page-${currentPage}`)?.classList.add('pagination__item--select'); // клікнуту сторінку робимо активною\n    }\n\n        // якщо кількість сторінок >7 (пагінація зі стрілками)\n\n    paginationFunctions.clearPagination(paginationEl); // очищуємо поточну пагінацію\n    paginationFunctions.displayPaginationBig(totalPages, paginationContainerEl, paginationEl); // рендер пагінації зі стрілками\n    document.querySelector('.js-page-1').classList.add('pagination__item--select'); // перша сторінка активна\n\n    const btnLeft = document.querySelector('.pagination__btnLeft'); // ліва стрілка\n    const btnRight = document.querySelector('.pagination__btnRight'); // права стрілка\n\n    btnLeft.disabled = true; // ліва стрілка неактивна бо ст 1\n\n    paginationContainerEl.addEventListener('click', onArrowPaginationClick);\n\n    function onArrowPaginationClick (e)  { // слухаємо контейнер, в якому стрілки (кнопки) і числова пагінація (список)\n        e.preventDefault();\n\n        if (!e.target.classList.contains('pagination__item') && !e.target.classList.contains('pagination__btnLeft') && !e.target.classList.contains('pagination__btnRight') ) {\n            return;   // якщо клік не по стрілках і не по цифрах не реагуємо\n        };\n            \n        if (e.target.classList.contains('pagination__item')) { // якщо клікнули по цифрах\n            const currentPage = Number(e.target.textContent);       // номер клікнутої сторінки \n            \n            onBigPaginationBtnClickrRenderFilms(currentPage, parsedSavedFilms); // рендер відповідної частини фільмів\n            onBigPaginationBtnClickrRenderPagination(totalPages, currentPage); // рендер пагінації (залежно від клікнутої сторінки буде одна з трьох пагінацій)\n\n            paginationFunctions.activityArrows(currentPage, totalPages);  // робимо стрілки неактивними якщо клікнули на першу чи останню сторінки\n        }\n\n        if (e.target.classList.contains('pagination__btnLeft')) { // якщо клікнули по лівій стрілці\n                    \n            const activePage = document.querySelector('.pagination__item--select'); \n            const activePageNumber = Number(activePage.textContent); // номер сторінки яка була активною на момент кліку\n            const previousPage = activePageNumber - 1; // визначаємо номер сторінки яку потрібно рендерити (перша злііва від активної)\n\n            onBigPaginationBtnClickrRenderFilms(previousPage, parsedSavedFilms); // рендер фільмів\n            onBigPaginationBtnClickrRenderPagination(totalPages, previousPage); // рендер пагінації\n\n            paginationFunctions.activityOfLeftArrow(1); // якщо рендерили по 1 ст то стрілка ліва стає неактивною\n        }\n\n        if (e.target.classList.contains('pagination__btnRight')) {\n\n            const activePage = document.querySelector('.pagination__item--select');\n            const activePageNumber = Number(activePage.textContent);\n            const nextPage = activePageNumber + 1;\n\n            onBigPaginationBtnClickrRenderFilms(nextPage, parsedSavedFilms);\n            onBigPaginationBtnClickrRenderPagination(totalPages, nextPage); \n                    \n            paginationFunctions.activityOfRightArrow(totalPages);  // якщо рендерили по останній сторінці, то права стрілка стає неактивною\n        }\n                \n        if (placeKey === 'watched') {\n            document.querySelector('button[data-add=\"queque\"]')?.addEventListener('click', onRemoveListeners);\n        }\n\n            // add gor queueSearch and watchedSearch\n\n        if (placeKey === 'queue') {\n            document.querySelector('button[data-add=\"watched\"]')?.addEventListener('click', onRemoveListeners);\n        }\n\n    }\n    \n    } catch {\n        console.log('nothing are parsed');\n    }\n}\n\nfunction filmsList(arrFilms, numberPerPage, page) { //нарізка фільмів по сторінках\n        cardContainerEl.innerHTML = '';\n        page -= 1; // рендеримо з 0\n\n        const start = numberPerPage * page;\n        const end = start + numberPerPage;\n        const paginatedData = arrFilms.slice(start, end);\n\n        return paginatedData;  // наприклад 2 сторінка з 8 фільмами: початок шматка фільмів - 8*1=8 і кінець - 8+8=16 (не включно, бо slice)\n    }\n\n\nfunction onBigPaginationBtnClickrRenderFilms(currentPage, parsedSavedFilms) { // рендер фільмів\n    cardContainerEl.innerHTML = '';\n    \n    const films = filmsList(parsedSavedFilms, NUMBER_PER_PAGE, currentPage); // вирізана частина\n        \n    appendFromLocalStorage(films); // рендер частини фільмів\n}\n\nfunction onBigPaginationBtnClickrRenderPagination(totalPages, currentPage) { //рендер пагінації залежно від клікнутої сторінки: три варіанти\n    paginationFunctions.clearPagination(paginationEl);\n\n    const n = NUMBER_PAGINATION - (Math.ceil(NUMBER_PAGINATION / 3) - 2); // 5\n    const m = totalPages - (NUMBER_PAGINATION - 1); // 5 з кінця\n\n\n    if (currentPage < n) {\n        paginationFunctions.displayPaginationBig(totalPages, paginationContainerEl, paginationEl); //пагінація з крапками біля останньої сторінки\n    } else if (currentPage >= n && currentPage <= m) {\n        paginationFunctions.displayPaginationBigMiddle(totalPages, currentPage, paginationContainerEl, paginationEl); //пагінація з середньою частиною\n    } else {\n        paginationFunctions.displayPaginationBigFinish(totalPages, paginationContainerEl, paginationEl); //пагінація з крапками біля 1 сторінки\n    }\n\n    document.querySelector(`.js-page-${currentPage}`)?.classList.add('pagination__item--select'); // поточну сторінку робимо активною\n}\n\nasync function appendFromLocalStorage(parsedFilms) { // рендер фільмів в контейнер\n    try {\n        const markup = await renderFilms(parsedFilms).then(result => result); // рядок для рендеру\n        cardContainerEl.innerHTML = markup; \n        showPlayBtnAfterImgLoad(); // Кнопка PLAY з'являється після картинки\n    } catch (error) {\n        console.error(error);\n    };\n};"],"names":["$76WF6","parcelRequire","$1fh5F","$2c891b7cf97d6499$var$cardContainerEl","document","querySelector","$2c891b7cf97d6499$var$paginationEl","$2c891b7cf97d6499$var$paginationContainerEl","$2c891b7cf97d6499$export$34c0a7faebb0d629","placeKey","onRemoveListeners","removeEventListener","onDigitPaginationClick","onArrowPaginationClick","addEventListener","savedFilms","localStorage","getItem","parsedSavedFilms","JSON","parse","filmsNumber","length","innerHTML","clearPagination","$huqaZ","showBlankPage","totalPages","Math","ceil","$2c891b7cf97d6499$var$appendFromLocalStorage","$2c891b7cf97d6499$var$filmsList","$2c891b7cf97d6499$var$NUMBER_PAGINATION","displayPaginationSmall","classList","add","e","preventDefault","target","contains","currentPage","Number","textContent","$2c891b7cf97d6499$var$onBigPaginationBtnClickrRenderFilms","displayPaginationBig","btnLeft","$2c891b7cf97d6499$var$onBigPaginationBtnClickrRenderPagination","activityArrows","activePage","previousPage","activityOfLeftArrow","nextPage","activityOfRightArrow","disabled","console","log","arrFilms","numberPerPage","page","start","end","slice","n","m","displayPaginationBigMiddle","displayPaginationBigFinish","async","parsedFilms","markup","$c9UGP","default","then","result","$3bDCL","error","onGalleryReview","$fc8e7c71b3b7ed96$var$filmContainer","$fc8e7c71b3b7ed96$var$buttons","$fc8e7c71b3b7ed96$var$btnQueue","$fc8e7c71b3b7ed96$var$btnWatched","$fc8e7c71b3b7ed96$var$onClassActiveToggle","remove","dataset","$ccqIN","load"],"version":3,"file":"my-library.1998f2c6.js.map"}